{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchInput/SearchInput.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","searchMovie","query","map","movie","key","imdbId","SearchInput","htmlFor","type","id","placeholder","onChange","this","props","setSearchQuery","React","Component","App","state","event","setState","target","value","findQueryInMovieCard","serchElement","toLowerCase","trim","includes","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"8vEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,YAAaC,EAAxB,EAAwBA,MAAxB,OAExB,yBAAKR,UAAU,UACZM,EAAOG,KAAI,SAAAC,GAAK,OACfH,EAAYG,EAAOF,IAAU,kBAAC,EAAD,eAAWG,IAAKD,EAAME,QAAYF,SAkBrEL,EAAWD,aAAe,CACxBE,OAAQ,GACRE,MAAO,I,WC1BIK,EAAb,4JACE,WACE,OACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOc,QAAQ,eAAed,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEe,KAAK,OACLC,GAAG,eACHhB,UAAU,QACViB,YAAY,mBACZC,SAAUC,KAAKC,MAAMC,wBAfnC,GAAiCC,IAAMC,WCE1BC,EAAb,4MACEC,MAAQ,CACNjB,MAAO,IAFX,EAKEa,eAAiB,SAACK,GAChB,EAAKC,SAAS,CAAEnB,MAAOkB,EAAME,OAAOC,SANxC,EASEC,qBAAuB,SAACpB,EAAOF,GAC7B,IAAMuB,EAAevB,EAAMwB,cAAcC,OAEzC,SAAWvB,EAAMd,MAAMoC,cAAcE,SAASH,KAC3CrB,EAAMb,YAAYmC,cAAcE,SAASH,KAbhD,4CAgBE,WACE,OACE,yBAAK/B,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEqB,eAAgBF,KAAKE,iBAEvB,kBAAC,EAAD,CACEd,YAAaY,KAAKW,qBAClBtB,MAAOW,KAAKM,MAAMjB,MAClBF,OAAQ6B,KAGZ,yBAAKnC,UAAU,WAAf,0BA7BR,GAAyBuB,aCDzBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8faebc1f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, searchMovie, query }) => (\n\n  <div className=\"movies\">\n    {movies.map(movie => (\n      searchMovie(movie, query) && <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  query: PropTypes.string,\n  searchMovie: PropTypes.func.isRequired,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n  query: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class SearchInput extends React.Component {\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              onChange={this.props.setSearchQuery}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  setSearchQuery: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { SearchInput } from './components/SearchInput';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  setSearchQuery = (event) => {\n    this.setState({ query: event.target.value });\n  };\n\n  findQueryInMovieCard = (movie, query) => {\n    const serchElement = query.toLowerCase().trim();\n\n    return (!!(movie.title.toLowerCase().includes(serchElement)\n    || movie.description.toLowerCase().includes(serchElement)));\n  };\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchInput\n            setSearchQuery={this.setSearchQuery}\n          />\n          <MoviesList\n            searchMovie={this.findQueryInMovieCard}\n            query={this.state.query}\n            movies={moviesFromServer}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}